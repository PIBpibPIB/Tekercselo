unit Declarations;
// LCD module connections
var
  LCD_RS : sbit  at LATB4_bit;
  LCD_EN : sbit  at LATB5_bit;
  LCD_D4 : sbit  at LATB0_bit;
  LCD_D5 : sbit  at LATB1_bit;
  LCD_D6 : sbit  at LATB2_bit;
  LCD_D7 : sbit  at LATB3_bit;

  LCD_RS_Direction : sbit at TRISB4_bit;
  LCD_EN_Direction : sbit at TRISB5_bit;
  LCD_D4_Direction : sbit at TRISB0_bit;
  LCD_D5_Direction : sbit at TRISB1_bit;
  LCD_D6_Direction : sbit at TRISB2_bit;
  LCD_D7_Direction : sbit at TRISB3_bit;

var
  ROTARY_1 : sbit at PORTC.0;
  ROTARY_2 : sbit at PORTC.1;

  STEP     : sbit at LATC.6;
  DIR      : sbit at LATC.2;
  
  PWMPIN   : sbit at LATA.4;

  SWITCH_1 : sbit at PORTC.4;
  SWITCH_2 : sbit at PORTC.5;


const MAGICNUMBER = 2000;
var
  i                   : byte;
  
  liCounter           : longint; volatile;
  ROTARY_1_LS         : boolean; volatile;
  PORTD_LS            : byte;    volatile;
  BUTTONFLAGS         : byte;    volatile;
  
  dwTicks             : dword;   volatile;
  dwNextLCDUpdateTime : dword;
  dwNextRPMMeasTime   : dword;
  
  wPulsePerRotary     : word; //[(pulse count *MAGICNUMBER) / (revolution /10) ]
  wMotorAcc           : word;

procedure initialize;
  
implementation
//------------------------------------------------------------------------------
procedure initialize;
begin
  ANSELA  := 0;
  ANSELB  := 0;                       // Configure PORTB pins as digital
  ANSELC  := 0;
  ANSELD  := 0;
  
  CM1CON0 := 0;
  CM2CON0 := 0;

  TRISC   := 0xFF;
  TRISC.2 := 0; //DIR
  TRISC.6 := 0; //STEP

  TRISB   := 0;
  TRISD   := 0xFF;
  
  TRISA.4 := 0; //PWM

  DIR     := 0;
  STEP    := 0;
end;
//------------------------------------------------------------------------------
end.
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------